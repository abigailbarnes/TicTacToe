#BlueJ class context
comment0.target=TicTacToeGame
comment0.text=\n\ \ \ A\ game\ of\ TicTacToe\ to\ be\ played\ between\ two\ human\ players.\n\ \ \ \n\ \ \ The\ board\ is\ a\ 2D\ array\ of\ Strings.\ \n\ \ \ One\ player\ is\ the\ String\ literal\ "X".\n\ \ \ The\ second\ player\ is\ the\ String\ literal\ "O"\ (letter,\ not\ number).\n\ \ \ \n\ \ \ The\ game\ should\ continue\ to\ be\ played\ as\ long\ as\ either\:\n\ \ \ 1)\ No\ player\ has\ won\ the\ game.\n\ \ \ 2)\ There\ is\ at\ least\ one\ open\ square\ left\ in\ the\ game.\n\ \ \ \ \n\ \ \ @author\:\ INSERT\ FIRST\ TEAM\ MEMBER'S\ NAME\ HERE\n\ \ \ @author\:\ INSERT\ SECOND\ TEAM\ MEMBER'S\ NAME\ HERE\n\n
comment1.params=
comment1.target=TicTacToeGame()
comment10.params=
comment10.target=void\ playAgainstSimpleAI()
comment11.params=
comment11.target=void\ drawBoard()
comment11.text=\ IGNORE\ THIS\ IT\ DOESNT\ WORK\n\ \ \ \ public\ void\ playAdvancedAI()\n\ \ \ \ {\n\ \ \ \ \ \ \ \ drawBoard();\n\ \ \ \ \ \ \ \ while\ (\!isGameOver())\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (mouseClicked())\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ double\ x\ \=\ StdDraw.mouseX();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ double\ y\ \=\ StdDraw.mouseY();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ square\ \=\ determineSquare(x,\ y);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int[]\ coords\ \=\ getSquareRowColumn(square);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (\!isCellClaimed(coords[0],\ coords[1]))\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(isXsTurn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("X",\ square);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ playRandomAI();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ isXsTurn\ \=\ \!isXsTurn;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ if(isXsTurn)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ Color\ c\ \=\ new\ Color(255,\ 0,\ 0,\ 50);\n\n\ \ \ \ \ \ \ \ \ \ \ \ StdDraw.setPenColor(c);\n\n\ \ \ \ \ \ \ \ \ \ \ \ StdDraw.filledSquare(WINDOW_SIZE/2,\ WINDOW_SIZE/2,\ 300);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ Color\ c\ \=\ new\ Color(0,\ 0,\ 225,\ 50);\n\n\ \ \ \ \ \ \ \ \ \ \ \ StdDraw.setPenColor(c);\n\n\ \ \ \ \ \ \ \ \ \ \ \ StdDraw.filledSquare(WINDOW_SIZE/2,\ WINDOW_SIZE/2,\ 300);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ StdDraw.setPenColor(StdDraw.GREEN);\n\ \ \ \ \ \ \ \ StdDraw.setPenRadius(0.02);\n\n\ \ \ \ \ \ \ \ if(isLeftDiagonal\ \=\=\ true\ ||\ isRightDiagonal\ \=\=\ true)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(isLeftDiagonal\ \=\=\ true)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(550,\ 550,\ 50,\ 50);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\ if(isRightDiagonal\ \=\=\ true)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(50,\ 550,\ 550,\ 50);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ if(hasRowsWon())\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(rowNumber\ \=\=\ 0)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(50,\ 500,\ 550,\ 500);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\ if(rowNumber\ \=\=\ 1)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(50,\ 300,\ 550,\ 300);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\ if(rowNumber\ \=\=\ 2)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(50,\ 100,\ 550,\ 100);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ if(hasColsWon())\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(columnNumber\ \=\=\ 0)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(100,\ 50,\ 100,\ 550);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\ if(columnNumber\ \=\=\ 1)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(300,\ 50,\ 300,\ 550);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\ if(columnNumber\ \=\=\ 2)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ StdDraw.line(500,\ 50,\ 500,\ 550);\n\ \ \ \ \ \ \ \ \ \ \ \ }\ \n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ StdDraw.show();\n\n\ \ \ \ \ \ \ \ if(isXsTurn)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Good\ job\ player\ O\!\ The\ game\ is\ over\!\ Would\ you\ like\ to\ play\ again?\ Type\ 'YES'\ to\ play\ again.\ Type\ 'NO'\ to\ not\ play\ again.");\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Good\ job\ player\ X\!\ The\ game\ is\ over\!\ Would\ you\ like\ to\ play\ again?\ Type\ 'YES'\ to\ play\ again.\ Type\ 'NO'\ to\ not\ play\ again.");\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ Scanner\ s\ \=\ new\ Scanner(System.in);\ \n\n\ \ \ \ \ \ \ \ String\ str\ \=\ s.nextLine();\n\n\ \ \ \ \ \ \ \ if(str.equals("YES"))\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ isXsTurn\ \=\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ playAGame();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n
comment12.params=x\ y
comment12.target=int\ determineSquare(double,\ double)
comment13.params=square
comment13.target=int[]\ getSquareRowColumn(int)
comment14.params=letter\ square
comment14.target=void\ drawShape(java.lang.String,\ int)
comment15.params=letter\ square
comment15.target=void\ addSymbolToBoard(java.lang.String,\ int)
comment16.params=
comment16.target=void\ waitForStart()
comment17.params=
comment17.target=boolean\ mouseClicked()
comment2.params=r\ c
comment2.target=boolean\ isCellClaimed(int,\ int)
comment3.params=
comment3.target=boolean\ hasDiagonalsWon()
comment4.params=
comment4.target=boolean\ hasRowsWon()
comment5.params=
comment5.target=boolean\ hasColsWon()
comment6.params=
comment6.target=boolean\ isGameOver()
comment7.params=
comment7.target=boolean\ isBoardFull()
comment8.params=
comment8.target=void\ playAISimple()
comment9.params=
comment9.target=void\ playAGame()
comment9.text=IGNORE\ THIS\ IT\ GOES\ WITH\ A\ METHOD\ THAT\ DOESNT\ WORK\n\ \ \ \ private\ void\ playRandomAI()\n\ \ \ \ {\n\ \ \ \ \ \ \ \ int\ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ int\ c\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ if(board[r][c]\ \!\=\ null)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[0][0])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 1);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[0][1])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 2);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[0][2])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[1][0])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 4);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[1][1])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 5);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[1][2])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 6);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[2][0])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 7);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[2][1])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 8);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\ if(board[r][c]\ \=\=\ board[2][2])\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(board[r][c]\ \=\=\ null)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ board[r][c]\ \=\ "O";\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawShape("0",\ 9);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ (int)\ (Math.random()\ *\ 3);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ (int)\ (Math.random()\ *\ 3);\ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n
numComments=18
